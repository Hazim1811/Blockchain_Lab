{
	"compiler": {
		"version": "0.8.30+commit.73712a01"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "balances",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					}
				],
				"name": "checkBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "count",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "deposit",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_count",
						"type": "uint256"
					}
				],
				"name": "setCount",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"title": "SimpleContract – starter example for Lab 6 (owner‑only counter + deposits)",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"checkBalance(address)": {
					"notice": "Read the deposited balance of a given address"
				},
				"deposit()": {
					"notice": "Anyone can deposit Ether; value is added to their balance"
				},
				"getCount()": {
					"notice": "Anyone can read the current counter"
				},
				"setCount(uint256)": {
					"notice": "Owner can set any value for `count`"
				},
				"withdraw(uint256)": {
					"notice": "Withdraw up to the caller’s own deposited amount"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Smartcontract.sol": "SimartContractt"
		},
		"evmVersion": "prague",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Smartcontract.sol": {
			"keccak256": "0x001668bb439d17b110cb0afe2496d15fcda1482f14e1df57dbc9589d2b28a2f5",
			"license": "MIT",
			"urls": [
				"bzz-raw://9a132388650f9bb4aaef754f0fa43b035df489c6ac2851d699b1fdfe13297071",
				"dweb:/ipfs/QmVVvYTx1ka6jBc1wr9WRxJ4YUbMVMgo358Hui8Nm8cStQ"
			]
		}
	},
	"version": 1
}